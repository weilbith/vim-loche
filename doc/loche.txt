*loche.txt*			       Tie location lists to files not windows

Version:  0.1
Author:   Thore Weilbier <thore@weilbier.net>
License:  MIT

==============================================================================
						     *loche_table_of_contents*
TABLE OF CONTENTS~

Introduction ............................................ |loche_introduction|
Usage .......................................................... |loche_usage|
Variables .................................................. |loche_variables|


==============================================================================
							  *loche_introduction*
INTRODUCTION~

Did ever wonder why |location-list|s belong to windows and not files or buffers?
Depending on how the location list gets used, it includes usually location
for the buffer displayed in the current window. Such are for example errors by
a linter or internal search results. Lists with location entries that belong
to more than one file usually go into the |quickfix| list. The point when this
becomes annoying is when you switch the buffer within a window. Because the
location list and the possibly open location window remain the same. So taking
the earlier example, you have location list with linting errors for the
current file. Maybe you need to switch the buffer to fix an error. So while
the window now shows a different file, the location lists still shows content
related to a different file.

If you use location lists like that, then this plugin can help you. This
automatically ties the location lists to files and take care of manging your
location window.


==============================================================================
								 *loche_usage*
USAGE~

The plugin works out of the box. With the default settings this will work like
the following. A buffer is loaded and the location list is filled. The buffer
gets switched now. The plugin will cache the location list automatically. If
the location window was open it gets closed. In any case the opening state
gets cached as well. The new buffer has now a clean window, without a location
list and according window.
When you now switch back to the initial buffer, the location list gets
restored from the cache. Depending on if the location window was open before,
it gets also opened again.
The same works also when switching between buffers that both have a cached
location list. In such case the location list gets exchanged. If the location
list was open for both buffers, the content gets directly swapped. The opening
behavior can be customized with |g:loche_reopen_behavior|.


==============================================================================
							     *loche_variables*
VARIABLES~

|g:loche_disable_auto_cache|			   boolean (default `v:false`)

  Disables the automatic establishment of all necessary auto-commands to make
  this plugin working. Not recommended to change.


|g:loche_reopen_behavior|				 number (default `0`)

  Defines if the location window should be reopened if switching to a buffer
  that has a cached list.

    `0` - takes the cached state, opens if the window was opened when the
	  buffer was switched the last time, else remains closed

    `1` - always opens the location window if one was cached

    `2` - never open the window for a cached location list


==============================================================================

vim:tw=78:ts=8:noet:ft=help:norl:
